1. 들어가기

JavaFx란 크로스 플랫폼에서 실행하는 리치 클라이언트 애플리케이션(Rich Client Application)을 개발하기 위한 그래픽과 미디어 패키지를 말합니다. JavaFx는 자바 표준 UI 였던 라이브러리였던 Swing을 대체하기 위해 만들어졌으며 더 가볍고 더 강력해진 라이브러리입니다.2) JDK 11부터는 JavaFx는 별도로 분리되었기 때문에 설치 및 설정이 필요합니다. 이번 포스팅은 JavaFx 설치하고 간단한 프로젝트를 만드는 방법에 대해 알아보겠습니다.

2-1. JavaFx SDK 다운로드 하기
 먼저, JavaFx SDK를 다운로드하기 위해 아래 링크를 통해 다운로드 페이지에 들어갑니다.

JavaFX - Gluon
Long Term Support JavaFX 11 is the first long term support release of JavaFX by Gluon. For commercial, long term support of JavaFX 11, please review our JavaFX Long Term Support options. The JavaFX 11 runtime is available as a platform-specific SDK, as a number of jmods, and as a set of artifacts in...

gluonhq.com

아래 페이지가 뜨면 "JavaFx Windows SDK"에 대한 [Download]아이콘을 눌러 파일을 다운받습니다.

다운받은 압축파일에 대해 압축을 풀어줍니다.


2-2. e(fx)clipse plugin 설치하기

다음으로 JavaFx의 프로젝트 관리 및 설정을 할 수 있는 e(fx)clipse plugin을 설치해야합니다. 먼저 이클립스에서 [Help] → [Eclipse Marketplace]을 클릭하여 [Eclipse Marketplace] 대화창을 엽니다.


[Eclipse Marketplace] 대화창에 "javafx"을 검색한 후, e(fx)clipse의 [install]을 누릅니다.

Eclipse 4.11 버전 이상을 사용해야 jdk8 사용가능하며, Eclipse Marketplace 에서 javafx 검색이 가능하당.
너무 최신버전의 Eclipse를 사용하려 할 때에는 JDK 또는 높여주어야 한다.


라이센스를 동의하면 설치가 시작되며 이클립스가 재부팅되면 e(fx)clipse? 설치가 완료됩니다.

?

2-3. JavaFx 프로젝트 생성하기

다음으로 JavaFx 프로젝트를 생성하도록 합시다. 먼저 [File]→ [New]→[Other] or Ctrl+N을 클릭합니다.


[New] 대화창에서 [JavaFx Project]을 선택한 후 [Next]을 클릭합니다. [New Java Project] 대화창에서 프로젝트명 설정하고 [Finish]?을 클릭합니다.


JavaFx_Example1 프로젝트의 Main.java에 예제 코드가 작성되어 있음을 확인할 수 있는 데, javafx 라이브러리 import 오류가 발생하는 것을 알 수 있습니다.


이를 해결하기 위해 JavaFx_Example1 프로젝트에 대해 오른쪽 클릭하여 [Build Path] → [Add External Achives]을 클릭합니다.


그리고 위에서 다운받아 압축해제한 "openjfx-11.0.2_windows-x64_bin-sdk" 폴더의 lib 폴더에 들어가서 ".jar"파일만 선택하고 [열기]를 클릭합니다.


그러면 아래와 같이 [Referenced Libraries]에 javafx에 대한 라이브러리가 import 됨을 확인할 수 있으며 이에 따라 javafx 라이브러리 import 에러가 해결됨을 확인할 수 있습니다. 하지만 main 클래스를 실행시키면 아래와 같은 오류가 뜨며 이를 해결해보도록 하겠습니다.


먼저, [Window]→[Preferences]을 클릭하여 [Preferences] 대화창을 엽니다. 왼쪽 목록에서 [Run/Debug]→[String Substitution]을 클릭합니다. 그리고 [New]을 클릭하고  Name에는 "PATH_TO_FX"로 설정하고 Value는 "openjfx-11.0.2_windows-x64_bin-sdk" 폴더의 lib 폴더로 경로를 설정한 후, [Ok]을 누르고 [Apply and Close]을 클릭합니다.


"JavaFx_Example1" 프로젝트를 마우스 오른쪽 클릭한 후, [Properties]을 클릭하여 프로젝트 [Properties]창을 엽니다. 프로젝트 [Properties] 창에서 [Run/Debug Setting]을 클릭한 후, Main을 더블 클릭하여 [Edit Configuration] 대화창을 엽니다.


 [Edit Configuration] 대화창에서 [Arguments] 탭을 클릭하고 [VM arguments]에 "--module-path ${PATH_TO_FX} --add-modules=javafx.controls"을 입력하고 [OK]을 누릅니다. 


 프로젝트 [Properties] 창의 [Apply and Close]을 눌르고 다시 Main 클래스파일를 실행시키면 아래와 같이 오류없이 실행됨을 확인할 수 있습니다.


JavaFx 설치 및 프로젝트 생성이 끝났으며 코드 수정을 통해 다양한 애플리케이션을 개발할 수 있습니다.